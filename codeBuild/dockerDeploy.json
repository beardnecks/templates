{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Builds and deploys the docker image",
  "Parameters": {
    "BuildName": {
      "Description": "Name of the build project",
      "Type": "String",
      "AllowedPattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
      "ConstraintDescription": "Must begin with upper or lowercase or a number. Only uppercase, lowercase, numbers, - and _ allowed.",
      "Default": "ClangTest"
    },
    "BuildSpecFileName": {
      "Description": "Filename/location of the buildspec file in source code repository",
      "Type": "String",
      "AllowedPattern": "[A-Za-z0-9/-_]+(.yml|.yaml)$",
      "ConstraintDescription": "Must be a yaml/yml file",
      "Default": "dockerdeploy.yml"
    },
    "BuildImage": {
      "Description": "Docker container image used to run the build",
      "Type": "String"
    },
    "IAMRole": {
      "Description": "Iam role arn passed from master template",
      "Type": "String"
    }
  },
  "Resources": {
    "DockerDeploy": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": {
          "Ref": "BuildName"
        },
        "Source": {
          "Type": "CODEPIPELINE",
          "BuildSpec": {
            "Ref": "BuildSpecFileName"
          },
          "InsecureSsl": false
        },
        "SecondarySourceVersions": [],
        "Artifacts": {
          "Type": "CODEPIPELINE",
          "Name": {
            "Fn::Sub": "${BuildName}-artifact"
          },
          "Packaging": "NONE",
          "EncryptionDisabled": false
        },
        "Cache": {
          "Type": "NO_CACHE"
        },
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "Image": "aws/codebuild/standard:4.0",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [],
          "PrivilegedMode": true,
          "ImagePullCredentialsType": "CODEBUILD"
        },
        "ServiceRole": {
          "Ref": "IAMRole"
        },
        "TimeoutInMinutes": 60,
        "QueuedTimeoutInMinutes": 480,
        "Tags": [],
        "BadgeEnabled": false,
        "LogsConfig": {
          "CloudWatchLogs": {
            "Status": "ENABLED"
          },
          "S3Logs": {
            "Status": "DISABLED",
            "EncryptionDisabled": false
          }
        }
      }
    }
  }
}
