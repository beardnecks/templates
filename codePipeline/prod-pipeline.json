{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "ArtifactStoreName": {
      "Type": "String",
      "Default": "",
      "Description": "S3 bucket that stores pipeline artifacts."
    },
    "PipelineName": {
      "Type": "String",
      "Default": "",
      "Description": "Name of the CodePipeline"
    },
    "SourceBucket": {
      "Type": "String",
      "Default": "",
      "Description": "S3 bucket source for the pipeline"
    },
    "SourceBucketObjectKey": {
      "Type": "String",
      "Default": "",
      "Description": "Zip file containing source code inside Source Code Bucket"
    },
    "OutputBucketName": {
      "Type": "String",
      "Default": "Pipeline-output-bucket",
      "Description": "Bucket containing the output artifact from the pipeline"
    },
    "UnitTestName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of unit test"
    },
    "VerifyTestName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of verify test"
    },
    "CoccinelleTestName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of Coccinelle"
    },
    "ClangTestName": {
      "Type": "String",
      "Default": "ClangTestName",
      "Description": "Project name of Clang test"
    },
    "RustTestName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of Rust test"
    },
    "PackagingName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of packaging"
    },
    "DockerBuildName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of docker"
    },
    "DockerDeployName": {
      "Type": "String",
      "Default": "",
      "Description": "Project name of docker"
    }
  },
  "Resources": {
    "ArtifacStoreBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "${PipelineName}-${ArtifactStoreName}"
        },
        "Tags": []
      }
    },
    "OutputBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "OutputBucketName"
        },
        "Tags": []
      }
    },
    "ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/service-role/",
        "RoleName": {
          "Fn::Sub": "AWSCodePipelineServiceRole-eu-west-1-${PipelineName}"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ecr",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:*",
                    "cloudtrail:LookupEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "s3",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "cloudwatch",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "autoscaling:Describe*",
                    "cloudwatch:*",
                    "logs:*",
                    "sns:*",
                    "iam:GetPolicy",
                    "iam:GetPolicyVersion",
                    "iam:GetRole"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "iam:CreateServiceLinkedRole",
                  "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                  "Condition": {
                    "StringLike": {
                      "iam:AWSServiceName": "events.amazonaws.com"
                    }
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "codepipeline",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "codepipeline:*",
                    "cloudformation:DescribeStacks",
                    "cloudformation:ListChangeSets",
                    "cloudtrail:CreateTrail",
                    "cloudtrail:DescribeTrails",
                    "cloudtrail:GetEventSelectors",
                    "cloudtrail:PutEventSelectors",
                    "cloudtrail:StartLogging",
                    "codebuild:BatchGetProjects",
                    "codebuild:CreateProject",
                    "codebuild:ListCuratedEnvironmentImages",
                    "codebuild:ListProjects",
                    "codecommit:GetBranch",
                    "codecommit:GetRepositoryTriggers",
                    "codecommit:ListBranches",
                    "codecommit:ListRepositories",
                    "codecommit:PutRepositoryTriggers",
                    "codecommit:GetReferences",
                    "codedeploy:GetApplication",
                    "codedeploy:BatchGetApplications",
                    "codedeploy:GetDeploymentGroup",
                    "codedeploy:BatchGetDeploymentGroups",
                    "codedeploy:ListApplications",
                    "codedeploy:ListDeploymentGroups",
                    "devicefarm:GetDevicePool",
                    "devicefarm:GetProject",
                    "devicefarm:ListDevicePools",
                    "devicefarm:ListProjects",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeVpcs",
                    "ecr:DescribeRepositories",
                    "ecr:ListImages",
                    "ecs:ListClusters",
                    "ecs:ListServices",
                    "elasticbeanstalk:DescribeApplications",
                    "elasticbeanstalk:DescribeEnvironments",
                    "iam:ListRoles",
                    "iam:GetRole",
                    "lambda:GetFunctionConfiguration",
                    "lambda:ListFunctions",
                    "events:ListRules",
                    "events:ListTargetsByRule",
                    "events:DescribeRule",
                    "opsworks:DescribeApps",
                    "opsworks:DescribeLayers",
                    "opsworks:DescribeStacks",
                    "s3:GetBucketPolicy",
                    "s3:GetBucketVersioning",
                    "s3:GetObjectVersion",
                    "s3:ListAllMyBuckets",
                    "s3:ListBucket",
                    "sns:ListTopics",
                    "codestar-notifications:ListNotificationRules",
                    "codestar-notifications:ListTargets",
                    "codestar-notifications:ListTagsforResource",
                    "codestar-notifications:ListEventTypes"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:CreateBucket",
                    "s3:PutBucketPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3::*:codepipeline-*"
                },
                {
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:iam::*:role/service-role/cwe-role-*"
                  ],
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "events.amazonaws.com"
                      ]
                    }
                  }
                },
                {
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": [
                        "codepipeline.amazonaws.com"
                      ]
                    }
                  }
                },
                {
                  "Action": [
                    "events:PutRule",
                    "events:PutTargets",
                    "events:DeleteRule",
                    "events:DisableRule",
                    "events:RemoveTargets"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:events:*:*:rule/codepipeline-*"
                  ]
                },
                {
                  "Sid": "CodeStarNotificationsReadWriteAccess",
                  "Effect": "Allow",
                  "Action": [
                    "codestar-notifications:CreateNotificationRule",
                    "codestar-notifications:DescribeNotificationRule",
                    "codestar-notifications:UpdateNotificationRule",
                    "codestar-notifications:DeleteNotificationRule",
                    "codestar-notifications:Subscribe",
                    "codestar-notifications:Unsubscribe"
                  ],
                  "Resource": "*",
                  "Condition": {
                    "StringLike": {
                      "codestar-notifications:NotificationsForResource": "arn:aws:codepipeline:*"
                    }
                  }
                },
                {
                  "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
                  "Effect": "Allow",
                  "Action": [
                    "sns:CreateTopic",
                    "sns:SetTopicAttributes"
                  ],
                  "Resource": "arn:aws:sns:*:*:codestar-notifications*"
                }
              ],
              "Version": "2012-10-17"
            }
          },
          {
            "PolicyName": "codebuild",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "codebuild:*",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetRepository",
                    "codecommit:ListBranches",
                    "codecommit:ListRepositories",
                    "cloudwatch:GetMetricStatistics",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ecr:DescribeRepositories",
                    "ecr:ListImages",
                    "elasticfilesystem:DescribeFileSystems",
                    "events:DeleteRule",
                    "events:DescribeRule",
                    "events:DisableRule",
                    "events:EnableRule",
                    "events:ListTargetsByRule",
                    "events:ListRuleNamesByTarget",
                    "events:PutRule",
                    "events:PutTargets",
                    "events:RemoveTargets",
                    "logs:GetLogEvents",
                    "s3:GetBucketLocation",
                    "s3:ListAllMyBuckets"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:DeleteLogGroup"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:log-group:/aws/codebuild/*:log-stream:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:PutParameter"
                  ],
                  "Resource": "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                },
                {
                  "Sid": "CodeStarNotificationsReadWriteAccess",
                  "Effect": "Allow",
                  "Action": [
                    "codestar-notifications:CreateNotificationRule",
                    "codestar-notifications:DescribeNotificationRule",
                    "codestar-notifications:UpdateNotificationRule",
                    "codestar-notifications:DeleteNotificationRule",
                    "codestar-notifications:Subscribe",
                    "codestar-notifications:Unsubscribe"
                  ],
                  "Resource": "*",
                  "Condition": {
                    "StringLike": {
                      "codestar-notifications:NotificationsForResource": "arn:aws:codebuild:*"
                    }
                  }
                },
                {
                  "Sid": "CodeStarNotificationsListAccess",
                  "Effect": "Allow",
                  "Action": [
                    "codestar-notifications:ListNotificationRules",
                    "codestar-notifications:ListEventTypes",
                    "codestar-notifications:ListTargets",
                    "codestar-notifications:ListTagsforResource"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
                  "Effect": "Allow",
                  "Action": [
                    "sns:CreateTopic",
                    "sns:SetTopicAttributes"
                  ],
                  "Resource": "arn:aws:sns:*:*:codestar-notifications*"
                },
                {
                  "Sid": "SNSTopicListAccess",
                  "Effect": "Allow",
                  "Action": [
                    "sns:ListTopics",
                    "sns:GetTopicAttributes"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "MaxSessionDuration": 3600,
        "Description": "Service Role for CodePipeline"
      }
    },
    "AmazonCloudWatchEventRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "cwe-pipeline-execution",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "codepipeline:StartPipelineExecution",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codepipeline:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":",
                        {
                          "Ref": "pipeline"
                        }
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "eventRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "--",
        "EventPattern": {
          "source": [
            "aws.s3"
          ],
          "detail-type": [
            "AWS API Call via CloudTrail"
          ],
          "detail": {
            "eventSource": [
              "s3.amazonaws.com"
            ],
            "eventName": [
              "PutObject",
              "CompleteMultipartUpload",
              "CopyObject"
            ],
            "requestParameters": {
              "bucketName": [
                {
                  "Ref": "SourceBucket"
                }
              ],
              "key": [
                {
                  "Ref": "SourceBucketObjectKey"
                }
              ]
            }
          }
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:codepipeline:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "pipeline"
                  }
                ]
              ]
            },
            "Id": "t-pipeline-target",
            "RoleArn": {
              "Fn::GetAtt": [
                "AmazonCloudWatchEventRole",
                "Arn"
              ]
            }
          }
        ]
      }
    },
    "AWSCloudTrailBucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain"
    },
    "AWSCloudTrailBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "AWSCloudTrailBucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSCloudTrailAclCheck",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudtrail.amazonaws.com"
                ]
              },
              "Action": "s3:GetBucketAcl",
              "Resource": {
                "Fn::GetAtt": [
                  "AWSCloudTrailBucket",
                  "Arn"
                ]
              }
            },
            {
              "Sid": "AWSCloudTrailWrite",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudtrail.amazonaws.com"
                ]
              },
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AWSCloudTrailBucket",
                        "Arn"
                      ]
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "/*"
                  ]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            }
          ]
        }
      }
    },
    "AwsCloudTrail": {
      "DependsOn": [
        "AWSCloudTrailBucketPolicy"
      ],
      "Type": "AWS::CloudTrail::Trail",
      "Properties": {
        "S3BucketName": {
          "Ref": "AWSCloudTrailBucket"
        },
        "EventSelectors": [
          {
            "DataResources": [
              {
                "Type": "AWS::S3::Object",
                "Values": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "SourceBucket"
                        },
                        "/",
                        {
                          "Ref": "SourceBucketObjectKey"
                        }
                      ]
                    ]
                  }
                ]
              }
            ],
            "ReadWriteType": "WriteOnly"
          }
        ],
        "IncludeGlobalServiceEvents": true,
        "IsLogging": true,
        "IsMultiRegionTrail": true
      }
    },
    "pipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": {
          "Ref": "PipelineName"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ServiceRole",
            "Arn"
          ]
        },
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Fn::Sub": "${PipelineName}-${ArtifactStoreName}"
          }
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "Source",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "PollForSourceChanges": "false",
                  "S3Bucket": {
                    "Ref": "SourceBucket"
                  },
                  "S3ObjectKey": {
                    "Ref": "SourceBucketObjectKey"
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "InputArtifacts": [],
                "Region": {
                  "Ref": "AWS::Region"
                },
                "Namespace": "SourceVariables"
              }
            ]
          },
          {
            "Name": "Testing",
            "Actions": [
              {
                "Name": "Unittest",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "UnitTestName"
                  }
                },
                "OutputArtifacts": [],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "RustTest",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "RustTestName"
                  }
                },
                "OutputArtifacts": [],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "Coccinelle",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 2,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CoccinelleTestName"
                  }
                },
                "OutputArtifacts": [],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "ClangTest",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 2,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "ClangTestName"
                  }
                },
                "OutputArtifacts": [],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "Suricata-verify",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 2,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "VerifyTestName"
                  }
                },
                "OutputArtifacts": [],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": "packaging-rpm",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "PackagingName"
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": "RPMBuildArtifact"
                  }
                ],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                },
                "Namespace": "BuildVariables"
              },
              {
                "Name": "docker-build",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "DockerBuildName"
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": "DockerBuildArtifact"
                  }
                ],
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "Name": "deploy-s3",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "BucketName": {
                    "Ref": "OutputBucketName"
                  },
                  "Extract": "true"
                },
                "OutputArtifacts": [],
                "InputArtifacts": [
                  {
                    "Name": "RPMBuildArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "docker-deploy",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Ref": "DockerDeployName"
                  },
                  "PrimarySource": "SourceArtifact"
                },
                "InputArtifacts": [
                  {
                    "Name": "DockerBuildArtifact"
                  }
                ],
                "Region": {
                  "Ref": "AWS::Region"
                }
              }
            ]
          }
        ]
      }
    }
  }
}