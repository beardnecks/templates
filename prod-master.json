{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates nested stacks containing CodeBuild templates",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "General Settings"
                    },
                    "Parameters": [
                        "BuildImage"
                    ]
                },
                {
                    "Label": {
                        "default": "Unit Test settings"
                    },
                    "Parameters": [
                        "UnitTestBuildSpecFileName",
                        "UnitTestTemplateURL"
                    ]
                },
                {
                    "Label": {
                        "default": "Verify Test settings"
                    },
                    "Parameters": [
                        "VerifyBuildSpecFileName",
                        "VerifyTestTemplateURL"
                    ]
                },
                {
                    "Label": {
                        "default": "Coccinelle Test settings"
                    },
                    "Parameters": [
                        "CoccinelleBuildSpecFileName",
                        "CoccinelleTestTemplateURL",
                        "CoccinelleBuildImage"
                    ]
                },
                {
                    "Label": {
                        "default": "Rust Test settings"
                    },
                    "Parameters": [
                        "RustBuildSpecFileName",
                        "RustTemplateURL",
                        "RustBuildImage"
                    ]
                },
                {
                    "Label": {
                        "default": "Clang Test settings"
                    },
                    "Parameters": [
                        "ClangBuildSpecFileName",
                        "ClangTemplateURL"
                    ]
                },
                {
                    "Label": {
                        "default": "Packaging Test settings"
                    },
                    "Parameters": [
                        "PackagingBuildSpecFileName",
                        "PackagingTemplateURL"
                    ]
                },
                {
                    "Label": {
                        "default": "Docker Build settings"
                    },
                    "Parameters": [
                        "DockerBuildBuildSpecFileName",
                        "DockerBuildTemplateURL"
                    ]
                },
                {
                    "Label": {
                        "default": "Docker deploy settings"
                    },
                    "Parameters": [
                        "DockerDeployBuildSpecFileName",
                        "DockerDeployTemplateURL"
                    ]
                },
                {
                    "Label": {
                        "default": "CodePipeline settings"
                    },
                    "Parameters": [
                        "ArtifactStoreName",
                        "PipelineName",
                        "SourceBucket",
                        "SourceBucketObjectKey",
                        "OutputBucketName",
                        "PipelineTemplateURL"
                    ]
                }
            ],
            "ParameterLabels": {
                "UnitTestBuildSpecFileName": {
                    "default": "File path of the buildspec file of the unit test"
                },
                "VerifyBuildSpecFileName": {
                    "default": "File path of the buildspec file of the verify tests"
                },
                "CoccinelleBuildSpecFileName": {
                    "default": "File path of the buildspec file of the coccinelle tests"
                },
                "ClangBuildSpecFileName": {
                    "default": "File path of the buildspec file of the coccinelle tests"
                },
                "RustBuildSpecFileName": {
                    "default": "File path of the buildspec file of the coccinelle tests"
                },
                "PackagingBuildSpecFileName": {
                    "default": "File path of the buildspec file of the packaging stage"
                },
                "DockerBuildBuildSpecFileName": {
                    "default": "File path of the buildspec file of the Docker stage"
                },
                "DockerDeployBuildSpecFileName": {
                    "default": "File path of the buildspec file of the Docker stage"
                },
                "BuildImage": {
                    "default": "ECR address of docker image used for building"
                },
                "CoccinelleBuildImage": {
                    "default": "ECR address of docker image used for Coccinelle"
                },
                "RustBuildImage": {
                    "default": "ECR address of docker image used for Rust"
                },
                "UnitTestTemplateURL": {
                    "default": "S3 URL of unit test template"
                },
                "VerifyTestTemplateURL": {
                    "default": "S3 URL of verify test template"
                },
                "CoccinelleTemplateURL": {
                    "default": "S3 URL of coccinelle test template"
                },
                "ClangTemplateURL": {
                    "default": "S3 URL of Clang test template"
                },
                "RustTemplateURL": {
                    "default": "S3 URL of rust test template"
                },
                "PackagingTemplateURL": {
                    "default": "S3 URL of packaging template"
                },
                "DockerBuildTemplateURL": {
                    "default": "S3 URL of Docker template"
                },
                "DockerDeployTemplateURL": {
                    "default": "S3 URL of Docker template"
                },
                "ArtifactStoreName": {
                    "default": "S3 bucket that stores pipeline artifacts."
                },
                "PipelineName": {
                    "default": "Name of the CodePipeline"
                },
                "SourceBucket": {
                    "default": "S3 bucket source for the pipeline"
                },
                "SourceBucketObjectKey": {
                    "default": "Zip file containing source code inside Source Code Bucket"
                },
                "OutputBucketName": {
                    "default": "Bucket containing the output artifact from the pipeline"
                },
                "PipelineTemplateURL": {
                    "default": "S3 URL for the pipeline template"
                }
            }
        }
    },
    "Parameters": {
        "UnitTestBuildSpecFileName": {
            "Description": "Filename of the buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "VerifyBuildSpecFileName": {
            "Description": "Filename of the buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "CoccinelleBuildSpecFileName": {
            "Description": "Name of the Coccinelle buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "ClangBuildSpecFileName": {
            "Description": "name of the Clang buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "RustBuildSpecFileName": {
            "Description": "name of the rust buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "PackagingBuildSpecFileName": {
            "Description": "Filename of the buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "DockerBuildBuildSpecFileName": {
            "Description": "Filename of the buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "DockerDeployBuildSpecFileName": {
            "Description": "Filename of the buildspec.yaml",
            "Type": "String",
            "Default": ""
        },
        "BuildImage": {
            "Description": "Docker container to run the build",
            "Type": "String",
            "Default": ""
        },
        "CoccinelleBuildImage": {
            "Description": "Docker container to run the coccinelle build",
            "Type": "String",
            "Default": ""
        },
        "RustBuildImage": {
            "Description": "Docker container to run the rust build",
            "Type": "String",
            "Default": ""
        },
        "UnitTestTemplateURL": {
            "Description": "S3 URL for unit test template",
            "Type": "String",
            "Default": ""
        },
        "VerifyTestTemplateURL": {
            "Description": "S3 URL for verify test template",
            "Type": "String",
            "Default": ""
        },
        "CoccinelleTemplateURL": {
            "Description": "S3 URL for coccinelle test template",
            "Type": "String",
            "Default": ""
        },
        "ClangTemplateURL": {
            "Description": "S3 URL for clang test template",
            "Type": "String",
            "Default": ""
        },
        "RustTemplateURL": {
            "Description": "S3 URL for rust test template",
            "Type": "String",
            "Default": ""
        },
        "PackagingTemplateURL": {
            "Description": "S3 URL for packaging build template",
            "Type": "String",
            "Default": ""
        },
        "DockerBuildTemplateURL": {
            "Description": "S3 URL for docker build template",
            "Type": "String",
            "Default": ""
        },
        "DockerDeployTemplateURL": {
            "Description": "S3 URL for docker build template",
            "Type": "String",
            "Default": ""
        },
        "ArtifactStoreName": {
            "Type": "String",
            "Default": "",
            "Description": "S3 bucket that stores pipeline artifacts."
        },
        "PipelineName": {
            "Type": "String",
            "Default": "",
            "Description": "Name of the CodePipeline"
        },
        "SourceBucket": {
            "Type": "String",
            "Default": "",
            "Description": "S3 bucket source for the pipeline"
        },
        "SourceBucketObjectKey": {
            "Type": "String",
            "Default": "",
            "Description": "Zip file containing source code inside Source Code Bucket"
        },
        "OutputBucketName": {
            "Type": "String",
            "Default": "Pipeline-output-bucket",
            "Description": "Bucket containing the output artifact from the pipeline"
        },
        "PipelineTemplateURL": {
            "Type": "String",
            "Default": "",
            "Description": "S3 URL for the pipeline template"
        }
    },
    "Resources": {
        "CodeBuildIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "codebuild.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess",
                    "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/CloudWatchFullAccess",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
                ]
            }
        },
        "UnitTest": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-UnitTest"
                            ]
                        ]
                    },
                    "BuildImage": {
                        "Ref": "BuildImage"
                    },
                    "BuildSpecFileName": {
                        "Ref": "UnitTestBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "UnitTestTemplateURL"
                }
            }
        },
        "Verify": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-VerifyTest"
                            ]
                        ]
                    },
                    "BuildImage": {
                        "Ref": "BuildImage"
                    },
                    "BuildSpecFileName": {
                        "Ref": "VerifyBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "VerifyTestTemplateURL"
                }
            }
        },
        "Coccinelle": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-CoccinelleTest"
                            ]
                        ]
                    },
                    "BuildImage": {
                        "Ref": "CoccinelleBuildImage"
                    },
                    "BuildSpecFileName": {
                        "Ref": "CoccinelleBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "CoccinelleTemplateURL"
                }
            }
        },
        "Clang": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-ClangTest"
                            ]
                        ]
                    },
                    "BuildImage": {
                        "Ref": "BuildImage"
                    },
                    "BuildSpecFileName": {
                        "Ref": "ClangBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "ClangTemplateURL"
                }
            }
        },
        "Rust": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-RustTest"
                            ]
                        ]
                    },
                    "BuildImage": {
                        "Ref": "RustBuildImage"
                    },
                    "BuildSpecFileName": {
                        "Ref": "RustBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "RustTemplateURL"
                }
            }
        },
        "Packaging": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-Packaging"
                            ]
                        ]
                    },
                    "BuildImage": {
                        "Ref": "BuildImage"
                    },
                    "BuildSpecFileName": {
                        "Ref": "PackagingBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "PackagingTemplateURL"
                }
            }
        },
        "DockerBuild": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-DockerBuild"
                            ]
                        ]
                    },
                    "BuildSpecFileName": {
                        "Ref": "DockerBuildBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "DockerBuildTemplateURL"
                }
            }
        },
        "DockerDeploy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "BuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-DockerDeploy"
                            ]
                        ]
                    },
                    "BuildSpecFileName": {
                        "Ref": "DockerDeployBuildSpecFileName"
                    },
                    "IAMRole": {
                        "Fn::GetAtt": [
                            "CodeBuildIamRole",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Ref": "DockerDeployTemplateURL"
                }
            }
        },
        "pipeline": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Ref": "PipelineTemplateURL"
                },
                "Parameters": {
                    "ArtifactStoreName": {
                        "Ref": "ArtifactStoreName"
                    },
                    "PipelineName": {
                        "Ref": "PipelineName"
                    },
                    "SourceBucket": {
                        "Ref": "SourceBucket"
                    },
                    "SourceBucketObjectKey": {
                        "Ref": "SourceBucketObjectKey"
                    },
                    "OutputBucketName": {
                        "Ref": "OutputBucketName"
                    },
                    "UnitTestName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-UnitTest"
                            ]
                        ]
                    },
                    "VerifyTestName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-VerifyTest"
                            ]
                        ]
                    },
                    "CoccinelleTestName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-CoccinelleTest"
                            ]
                        ]
                    },
                    "RustTestName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-RustTest"
                            ]
                        ]
                    },
                    "ClangTestName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-ClangTest"
                            ]
                        ]
                    },
                    "PackagingName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-Packaging"
                            ]
                        ]
                    },
                    "DockerBuildName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-DockerBuild"
                            ]
                        ]
                    },
                    "DockerDeployName": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "PipelineName"
                                },
                                "-DockerDeploy"
                            ]
                        ]
                    }
                }
            }
        }
    }
}